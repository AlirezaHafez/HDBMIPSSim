/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import Assembler.Assembler;
import Assembler.Instruction;
import FileHandler.FileIO;
import HBDMIPS.EXE;
import HBDMIPS.EXE_MEM;
import HBDMIPS.ID;
import HBDMIPS.ID_EXE;
import HBDMIPS.IF;
import HBDMIPS.IF_ID;
import HBDMIPS.MEM;
import HBDMIPS.MEM_WB;
import HBDMIPS.WB;
import java.awt.Font;
import java.util.HashMap;
import javax.swing.JFileChooser;
import memory.AddressAllocator;

/**
 *
 * @author Alirez
 */
public class Main extends javax.swing.JFrame {

    String filePath = null;
    boolean run;
    int lineOfInstructions;
    int currentLineOfInstructions;
    //
    ID_EXE idexe;
    IF_ID ifid;
    EXE_MEM exemem;
    MEM_WB memwb;

    IF stage_if;
    ID stage_id;
    EXE stage_exe;
    MEM stage_mem;
    WB stage_wb;
    AddressAllocator aa;

    /**
     * Creates new form Main
     */
    public Main() {
        initComponents();
        run = true;
        assemblyText.setVisible(false);
        binaryText.setVisible(false);
        binaryText.setEditable(false);
        assemblyText.setEditable(false);
        assembleButton.setVisible(false);
        runButton.setVisible(false);
        nextIns.setVisible(false);
        execAll.setVisible(false);
        this.currentLineOfInstructions = 0;

        Font font = regMon.getFont();
        float size = font.getSize() + 3.5f;
        regMon.setFont(font.deriveFont(size));
        aa = new AddressAllocator();
        String memory="";
        for (int i = 0; i < aa.getMemory().size(); i++) {
            memory += (aa.parse8DigitHex(i) + " : " + aa.getMemory().get(aa.parse8DigitHex(i))+"\n");
        }
        memMon.setText(memory);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        assemblyTab = new javax.swing.JTabbedPane();
        jScrollPane1 = new javax.swing.JScrollPane();
        assemblyText = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        binaryText = new javax.swing.JTextArea();
        assembleButton = new javax.swing.JButton();
        monitors = new javax.swing.JTabbedPane();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jScrollPane4 = new javax.swing.JScrollPane();
        memMon = new javax.swing.JTextArea();
        jScrollPane5 = new javax.swing.JScrollPane();
        regMon = new javax.swing.JTextArea();
        jScrollPane7 = new javax.swing.JScrollPane();
        currnt_ins = new javax.swing.JTextArea();
        jTabbedPane2 = new javax.swing.JTabbedPane();
        jScrollPane9 = new javax.swing.JScrollPane();
        insCacheMon = new javax.swing.JTextArea();
        jScrollPane10 = new javax.swing.JScrollPane();
        dataCacheMon = new javax.swing.JTextArea();
        jScrollPane11 = new javax.swing.JScrollPane();
        jTextArea9 = new javax.swing.JTextArea();
        runButton = new javax.swing.JButton();
        nextIns = new javax.swing.JButton();
        execAll = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        assemblyText.setColumns(20);
        assemblyText.setRows(5);
        jScrollPane1.setViewportView(assemblyText);

        assemblyTab.addTab("MIPS Assembly", jScrollPane1);

        binaryText.setColumns(20);
        binaryText.setRows(5);
        jScrollPane2.setViewportView(binaryText);

        assemblyTab.addTab("MIPS Binary", jScrollPane2);

        assembleButton.setText("Assemble");
        assembleButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                assembleButtonActionPerformed(evt);
            }
        });

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane3.setViewportView(jTextArea1);

        monitors.addTab("Monitor", jScrollPane3);

        memMon.setColumns(20);
        memMon.setRows(5);
        jScrollPane4.setViewportView(memMon);

        monitors.addTab("Memory", jScrollPane4);

        regMon.setColumns(20);
        regMon.setRows(5);
        jScrollPane5.setViewportView(regMon);

        monitors.addTab("Registers", jScrollPane5);

        currnt_ins.setColumns(20);
        currnt_ins.setRows(5);
        jScrollPane7.setViewportView(currnt_ins);

        monitors.addTab("Current", jScrollPane7);

        insCacheMon.setColumns(20);
        insCacheMon.setRows(5);
        jScrollPane9.setViewportView(insCacheMon);

        jTabbedPane2.addTab("Instruction Cache", jScrollPane9);

        dataCacheMon.setColumns(20);
        dataCacheMon.setRows(5);
        jScrollPane10.setViewportView(dataCacheMon);

        jTabbedPane2.addTab("Data Cache", jScrollPane10);

        jTextArea9.setColumns(20);
        jTextArea9.setRows(5);
        jScrollPane11.setViewportView(jTextArea9);

        jTabbedPane2.addTab("OS", jScrollPane11);

        runButton.setText("Run");
        runButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                runButtonActionPerformed(evt);
            }
        });

        nextIns.setText("Next Step");
        nextIns.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nextInsActionPerformed(evt);
            }
        });

        execAll.setText("Execute All");
        execAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                execAllActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(assemblyTab, javax.swing.GroupLayout.PREFERRED_SIZE, 414, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(assembleButton, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(runButton, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(nextIns, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(execAll)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jTabbedPane2)
                    .addComponent(monitors, javax.swing.GroupLayout.DEFAULT_SIZE, 410, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(monitors, javax.swing.GroupLayout.PREFERRED_SIZE, 232, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(assemblyTab, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(assembleButton)
                            .addComponent(runButton)
                            .addComponent(nextIns)
                            .addComponent(execAll))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTabbedPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 209, Short.MAX_VALUE)
                .addContainerGap())
        );

        jMenu1.setText("File");

        jMenuItem1.setText("Open File...");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");
        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 21, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void assembleButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_assembleButtonActionPerformed
        if (!filePath.isEmpty() && filePath != null) {
            binaryText.setText("");
            HashMap<Integer, Instruction> assembled = new HashMap<Integer, Instruction>(Assembler.assembleFile(filePath));
            this.lineOfInstructions = assembled.size();
            binaryText.setVisible(true);
            binaryText.setText("Address       Instruction\n\n");
            for (int i = 0; i < assembled.size(); i++) {
                binaryText.setText(binaryText.getText().toString() + assembled.get(i).getAddress() + " : " + assembled.get(i).getInstruction() + "\n");
            }
            runButton.setVisible(true);
            nextIns.setVisible(false);
        }
    }//GEN-LAST:event_assembleButtonActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        JFileChooser input = new JFileChooser();
        int result = input.showOpenDialog(this);
        if (result == JFileChooser.APPROVE_OPTION) {
            assemblyText.setVisible(true);
            assembleButton.setVisible(true);
            filePath = input.getSelectedFile().getAbsolutePath();
            assemblyText.setText(FileIO.Fread(filePath.replace("\\", "/")));
        } else if (result == JFileChooser.CANCEL_OPTION) {
            System.out.println("Cancel was selected");
        }
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void runButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_runButtonActionPerformed
        if (run) {
            currentLineOfInstructions = 0;
            idexe = new ID_EXE();
            ifid = new IF_ID();
            exemem = new EXE_MEM();
            memwb = new MEM_WB();

            stage_if = new IF(ifid, filePath);
            stage_id = new ID(ifid, idexe, stage_if);
            stage_exe = new EXE(idexe, exemem);
            stage_mem = new MEM(exemem, memwb, stage_if);
            stage_wb = new WB(stage_id, memwb);
            run = false;
            runButton.setVisible(false);
            nextIns.setVisible(true);
            execAll.setVisible(true);
        }
    }//GEN-LAST:event_runButtonActionPerformed

    private void nextInsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nextInsActionPerformed
        if (currentLineOfInstructions < lineOfInstructions) {
            stage_if.action();
            currnt_ins.setText(stage_if.getInstruction());
            stage_id.action();
            stage_exe.action();
            if (stage_exe.isbranch()) {
                if (exemem.getALU_result() == 0 && !stage_exe.isnot()) {
                    int offset;
                    offset = Integer.parseInt(stage_exe.getIdexe().getSignExt(), 2);
                    stage_if.setPC(stage_if.getPC() + offset);

                }
                if (exemem.getALU_result() != 0 && stage_exe.isnot()) {
                    int offset;
                    offset = Integer.parseInt(stage_exe.getIdexe().getSignExt(), 2);
                    stage_if.setPC(stage_if.getPC() + offset);

                }
            }
            stage_mem.action();
            stage_wb.action();
            currentLineOfInstructions = stage_if.getPC();
            regMon.setText(stage_id.getRegfile().print());
            dataCacheMon.setText(stage_mem.print());
        } else {
            nextIns.setVisible(false);
            runButton.setVisible(true);
            run = true;
        }
    }//GEN-LAST:event_nextInsActionPerformed

    private void execAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_execAllActionPerformed
        while (currentLineOfInstructions < lineOfInstructions) {
            stage_if.action();
            stage_id.action();
            stage_exe.action();
            if (stage_exe.isbranch()) {
                if (exemem.getALU_result() == 0 && !stage_exe.isnot()) {
                    int offset;
                    offset = Integer.parseInt(stage_exe.getIdexe().getSignExt(), 2);
                    stage_if.setPC(stage_if.getPC() + offset);
                }
                if (exemem.getALU_result() != 0 && stage_exe.isnot()) {
                    int offset;
                    offset = Integer.parseInt(stage_exe.getIdexe().getSignExt(), 2);
                    stage_if.setPC(stage_if.getPC() + offset);
                }
            }
            stage_mem.action();
            stage_wb.action();
            currentLineOfInstructions = stage_if.getPC();
        }
        regMon.setText(stage_id.getRegfile().print());
        dataCacheMon.setText(stage_mem.print());
        execAll.setVisible(false);
        runButton.setVisible(true);
        nextIns.setVisible(false);
        run = true;
    }//GEN-LAST:event_execAllActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Main().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton assembleButton;
    private javax.swing.JTabbedPane assemblyTab;
    private javax.swing.JTextArea assemblyText;
    private javax.swing.JTextArea binaryText;
    private javax.swing.JTextArea currnt_ins;
    private javax.swing.JTextArea dataCacheMon;
    private javax.swing.JButton execAll;
    private javax.swing.JTextArea insCacheMon;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane10;
    private javax.swing.JScrollPane jScrollPane11;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane9;
    private javax.swing.JTabbedPane jTabbedPane2;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextArea jTextArea9;
    private javax.swing.JTextArea memMon;
    private javax.swing.JTabbedPane monitors;
    private javax.swing.JButton nextIns;
    private javax.swing.JTextArea regMon;
    private javax.swing.JButton runButton;
    // End of variables declaration//GEN-END:variables
}
